-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.m_lecturer
(
    nip character varying(15) COLLATE pg_catalog."default" NOT NULL,
    name character varying(50) COLLATE pg_catalog."default",
    id_m_users integer,
    created_at character varying(20) COLLATE pg_catalog."default",
    updated_at character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT m_lecturer_pkey PRIMARY KEY (nip)
);

CREATE TABLE IF NOT EXISTS public.m_students
(
    nim character varying(10) COLLATE pg_catalog."default" NOT NULL,
    name character varying(50) COLLATE pg_catalog."default",
    phone character varying(15) COLLATE pg_catalog."default",
    email character varying(30) COLLATE pg_catalog."default",
    created_at character varying(20) COLLATE pg_catalog."default",
    updated_at character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT m_students_pkey PRIMARY KEY (nim)
);

CREATE TABLE IF NOT EXISTS public.m_subjects
(
    code character varying(10) COLLATE pg_catalog."default" NOT NULL,
    name character varying(30) COLLATE pg_catalog."default",
    created_at character varying(20) COLLATE pg_catalog."default",
    updated_at character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT m_subjects_pkey PRIMARY KEY (code)
);

CREATE TABLE IF NOT EXISTS public.m_users
(
    id integer NOT NULL DEFAULT nextval('m_users_id_seq'::regclass),
    username character varying(50) COLLATE pg_catalog."default",
    password character varying(255) COLLATE pg_catalog."default",
    level integer,
    created_at character varying(20) COLLATE pg_catalog."default",
    updated_at character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT m_users_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.u_lecturer_subject
(
    id integer NOT NULL DEFAULT nextval('u_lecturer_subject_id_seq'::regclass),
    lecturer_nip character varying(15) COLLATE pg_catalog."default",
    subject_code character varying(10) COLLATE pg_catalog."default",
    created_at character varying(20) COLLATE pg_catalog."default",
    updated_at character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT u_lecturer_subject_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.u_schedule_subject
(
    id integer NOT NULL DEFAULT nextval('u_schedule_subject_id_seq'::regclass),
    subject_code character varying(10) COLLATE pg_catalog."default",
    day character varying(15) COLLATE pg_catalog."default",
    start_time character varying(10) COLLATE pg_catalog."default",
    end_time character varying(10) COLLATE pg_catalog."default",
    created_at character varying(20) COLLATE pg_catalog."default",
    updated_at character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT u_schedule_subject_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.u_student_subject
(
    id integer NOT NULL DEFAULT nextval('u_student_subject_id_seq'::regclass),
    student_nim character varying(10) COLLATE pg_catalog."default",
    subject_code character varying(10) COLLATE pg_catalog."default",
    created_at character varying(20) COLLATE pg_catalog."default",
    updated_at character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT u_student_subject_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.m_lecturer
    ADD CONSTRAINT fk_lecturer_user FOREIGN KEY (id_m_users)
    REFERENCES public.m_users (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.u_lecturer_subject
    ADD CONSTRAINT fk_lecturer_subject_code FOREIGN KEY (subject_code)
    REFERENCES public.m_subjects (code) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.u_lecturer_subject
    ADD CONSTRAINT fk_lecturer_subject_nip FOREIGN KEY (lecturer_nip)
    REFERENCES public.m_lecturer (nip) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.u_schedule_subject
    ADD CONSTRAINT fk_subject_schedule FOREIGN KEY (subject_code)
    REFERENCES public.m_subjects (code) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.u_student_subject
    ADD CONSTRAINT fk_student_subject FOREIGN KEY (student_nim)
    REFERENCES public.m_students (nim) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.u_student_subject
    ADD CONSTRAINT fk_student_subject_code FOREIGN KEY (subject_code)
    REFERENCES public.m_subjects (code) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;

END;